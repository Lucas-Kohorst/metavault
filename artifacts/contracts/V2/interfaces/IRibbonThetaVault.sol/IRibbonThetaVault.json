{
  "_format": "hh-sol-artifact-1",
  "contractName": "IRibbonThetaVault",
  "sourceName": "contracts/V2/interfaces/IRibbonThetaVault.sol",
  "abi": [
    {
      "inputs": [],
      "name": "currentOption",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextOption",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionAuctionID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nextOption",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currentOption",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "nextOptionReadyAt",
              "type": "uint32"
            }
          ],
          "internalType": "struct Vault.OptionState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isPut",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint56",
              "name": "minimumSupply",
              "type": "uint56"
            },
            {
              "internalType": "uint104",
              "name": "cap",
              "type": "uint104"
            }
          ],
          "internalType": "struct Vault.VaultParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "round",
              "type": "uint16"
            },
            {
              "internalType": "uint104",
              "name": "lockedAmount",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "lastLockedAmount",
              "type": "uint104"
            },
            {
              "internalType": "uint128",
              "name": "totalPending",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "queuedWithdrawShares",
              "type": "uint128"
            }
          ],
          "internalType": "struct Vault.VaultState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
